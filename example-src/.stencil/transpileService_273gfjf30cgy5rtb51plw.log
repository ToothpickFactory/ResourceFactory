{"moduleFile":{"sourceFilePath":"/mnt/d/Dev/ResourceFactory/example-src/src/components/app-root/app-root.tsx","jsFilePath":"/mnt/d/Dev/ResourceFactory/example-src/src/components/app-root/app-root.js","cmps":[{"isLegacy":false,"tagName":"app-root","excludeFromCollection":false,"isCollectionDependency":false,"componentClassName":"AppRoot","elementRef":null,"encapsulation":"none","properties":[],"virtualProperties":[],"states":[{"name":"todoViews"},{"name":"subscriberCount"}],"methods":[],"listeners":[],"events":[],"watchers":[],"styles":[{"modeName":"$","styleStr":null,"styleId":"APP-ROOT","compiledStyleText":null,"compiledStyleTextScoped":null,"compiledStyleTextScopedCommented":null,"externalStyles":[{"absolutePath":"/mnt/d/Dev/ResourceFactory/example-src/src/components/app-root/app-root.css","relativePath":"app-root.css","originalComponentPath":"app-root.css"}]}],"legacyConnect":[],"legacyContext":[],"internal":false,"assetsDirs":[],"styleDocs":[],"docs":{"tags":[],"text":""},"jsFilePath":"/mnt/d/Dev/ResourceFactory/example-src/src/components/app-root/app-root.js","sourceFilePath":"/mnt/d/Dev/ResourceFactory/example-src/src/components/app-root/app-root.tsx","hasAttributeChangedCallbackFn":false,"hasComponentWillLoadFn":true,"hasComponentDidLoadFn":false,"hasComponentWillUpdateFn":false,"hasComponentDidUpdateFn":false,"hasComponentWillRenderFn":false,"hasComponentDidRenderFn":false,"hasComponentDidUnloadFn":false,"hasConnectedCallbackFn":false,"hasDisconnectedCallbackFn":false,"hasElement":false,"hasEvent":false,"hasLifecycle":true,"hasListener":false,"hasListenerTarget":false,"hasListenerTargetWindow":false,"hasListenerTargetDocument":false,"hasListenerTargetBody":false,"hasListenerTargetParent":false,"hasMember":true,"hasMethod":false,"hasMode":false,"hasAttribute":false,"hasProp":false,"hasPropNumber":false,"hasPropBoolean":false,"hasPropString":false,"hasPropMutable":false,"hasReflect":false,"hasRenderFn":true,"hasState":true,"hasStyle":true,"hasVdomAttribute":true,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":true,"hasVdomRef":false,"hasVdomRender":true,"hasVdomStyle":false,"hasVdomText":true,"hasWatchCallback":false,"isPlain":false,"htmlAttrNames":["type","name"],"htmlTagNames":["todo-view","header","h1","aside","button","form","h4","input","main"],"isUpdateable":true,"potentialCmpRefs":["todo-view"]}],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":["@stencil/core"],"hasVdomAttribute":true,"hasVdomClass":true,"hasVdomFunctional":true,"hasVdomKey":true,"hasVdomListener":true,"hasVdomRef":true,"hasVdomRender":false,"hasVdomStyle":true,"hasVdomText":true,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":["/mnt/d/Dev/ResourceFactory/example-src/src/models/Todo/Todo"],"originalCollectionComponentPath":null,"potentialCmpRefs":[]},"jsText":"import { h } from '@stencil/core';\r\nimport { Todo } from '../../models/Todo/Todo';\r\nexport class AppRoot {\r\n    constructor() {\r\n        this.todoViews = [];\r\n        this.subscriberCount = 0;\r\n    }\r\n    componentWillLoad() {\r\n        Todo.subscribe(() => this.subscriberCount = Todo.subs.length);\r\n    }\r\n    addTodoView() {\r\n        this.todoViews = [...this.todoViews, h(\"todo-view\", null)];\r\n    }\r\n    addTodo(e) {\r\n        e.preventDefault();\r\n        const newTodo = e.target.children.todo.value;\r\n        Todo.create(newTodo);\r\n        e.target.reset();\r\n    }\r\n    render() {\r\n        return [\r\n            h(\"header\", null,\r\n                h(\"h1\", null, \"Resource Factory Test\")),\r\n            h(\"aside\", null,\r\n                h(\"button\", { onClick: () => this.addTodoView() }, \"Create New Todo View\"),\r\n                h(\"form\", { onSubmit: (e) => this.addTodo(e) },\r\n                    h(\"h4\", null, \"Create new TODO\"),\r\n                    h(\"input\", { type: \"text\", name: \"todo\" }),\r\n                    h(\"button\", { type: \"submit\" }, \"+\"))),\r\n            h(\"main\", null, this.todoViews)\r\n        ];\r\n    }\r\n    static get is() { return \"app-root\"; }\r\n    static get originalStyleUrls() { return {\r\n        \"$\": [\"app-root.css\"]\r\n    }; }\r\n    static get styleUrls() { return {\r\n        \"$\": [\"app-root.css\"]\r\n    }; }\r\n    static get states() { return {\r\n        \"todoViews\": {},\r\n        \"subscriberCount\": {}\r\n    }; }\r\n}\r\n"}